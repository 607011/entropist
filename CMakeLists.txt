CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT(entropist)

IF(WIN32)
  MESSAGE(STATUS ">>> WIN32 not implemented yet.")
ENDIF(WIN32)

IF(UNIX AND APPLE)
  ADD_DEFINITIONS(-DMACOS)
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -std=c++11")
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O0 -ggdb")
  SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/contrib/cmake")
  INCLUDE(FindCryptoPP)
  FIND_PACKAGE(CryptoPP REQUIRED)
  FIND_LIBRARY(COREFOUNDATION_LIBRARY CoreFoundation)
  FIND_LIBRARY(CARBON_LIBRARY Carbon)
  FIND_LIBRARY(APP_SERVICES_LIBRARY ApplicationServices)
  MARK_AS_ADVANCED(CARBON_LIBRARY
                   QUICKTIME_LIBRARY
                   APP_SERVICES_LIBRARY
                   CRYPTOPP_LIBRARY)
  INCLUDE_DIRECTORIES(${CRYPTOPP_INCLUDE_DIRS})
  SET(EXTRA_LIBS ${EXTRA_LIBS}
      ${CARBON_LIBRARY}
      ${COREFOUNDATION_LIBRARY}
      ${APP_SERVICES_LIBRARY}
      ${CRYPTOPP_LIBRARY})
  ADD_EXECUTABLE(${PROJECT_NAME} entropist-main.cpp entropist_macos.cpp)
  TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${EXTRA_LIBS})
ENDIF(UNIX AND APPLE)

IF(UNIX AND NOT APPLE)
  MESSAGE(STATUS "Searching for X11...")
  FIND_PACKAGE(X11)
  IF(X11_FOUND)
    INCLUDE_DIRECTORIES(${X11_INCLUDE_DIR})
    LINK_LIBRARIES(${X11_LIBRARIES})
    MESSAGE(STATUS " X11_INCLUDE_DIR: " ${X11_INCLUDE_DIR})
    MESSAGE(STATUS " X11_LIBRARIES: " ${X11_LIBRARIES})
  ENDIF(X11_FOUND)
ENDIF(UNIX AND NOT APPLE)

IF(UNIX AND NOT APPLE AND X11_FOUND)
   ADD_DEFINITIONS(-DX11)
   ADD_EXECUTABLE(entropist entropist-main.cpp entropist_x11.cpp)
ENDIF(UNIX AND NOT APPLE AND X11_FOUND)
