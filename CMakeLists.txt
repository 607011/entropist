CMAKE_MINIMUM_REQUIRED(VERSION 3.1)
PROJECT(entropist)

SET(COMMON_SOURCES entropist-main.cpp entropy-test.cpp)

IF(CMAKE_BUILD_TYPE MATCHES Debug)
  ADD_DEFINITIONS(-DDEBUG)
ENDIF()

IF(WIN32)
  MESSAGE(STATUS ">>> WIN32 not implemented yet.")
  ADD_DEFINITIONS(-DWIN32)
ENDIF()

IF(UNIX)
  SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/contrib/cmake")
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -std=c++11")
  SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS} -O2 -s")
  SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS} -ggdb")
  INCLUDE(FindCryptoPP)
  FIND_PACKAGE(CryptoPP REQUIRED)
  INCLUDE_DIRECTORIES(${CRYPTOPP_INCLUDE_DIRS} ${CMAKE_SOURCE_DIR}/contrib/cpp)
  SET(EXTRA_LIBS ${EXTRA_LIBS} ${CRYPTOPP_LIBRARY})
  ADD_DEFINITIONS(-DUNIX)
ENDIF()

IF(UNIX AND APPLE)
  ADD_DEFINITIONS(-DMACOS)
  FIND_LIBRARY(COREFOUNDATION_LIBRARY CoreFoundation)
  FIND_LIBRARY(CARBON_LIBRARY Carbon)
  FIND_LIBRARY(APP_SERVICES_LIBRARY ApplicationServices)
  MARK_AS_ADVANCED(CARBON_LIBRARY
                   COREFOUNDATION_LIBRARY
                   APP_SERVICES_LIBRARY
                   CRYPTOPP_LIBRARY)
  SET(EXTRA_LIBS ${EXTRA_LIBS}
      ${CARBON_LIBRARY}
      ${COREFOUNDATION_LIBRARY}
      ${APP_SERVICES_LIBRARY}
      ${CRYPTOPP_LIBRARY})
  ADD_EXECUTABLE(${PROJECT_NAME} ${COMMON_SOURCES} entropist_macos.cpp)
  TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${EXTRA_LIBS})
ENDIF()

IF(UNIX AND NOT APPLE)
  SET(THREADS_PREFER_PTHREAD_FLAG ON)
  FIND_PACKAGE(Threads REQUIRED)
  SET(EXTRA_LIBS ${EXTRA_LIBS} Threads::Threads)
  ADD_DEFINITIONS(-DLINUX)
  ADD_EXECUTABLE(${PROJECT_NAME} ${COMMON_SOURCES} entropist_linux.cpp)
  TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${EXTRA_LIBS})
ENDIF()
